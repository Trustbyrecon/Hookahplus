{
  "cmd.deployHomepageInteractive": {
    "path": "cmd/modules/deployHomepageInteractive.py",
    "description": "Injects a Next.js homepage with links for onboarding, demo, and live sessions."
  },
  "cmd.bundleDeployKit": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Bundles the deployable UI kit and assets."
  },
  "cmd.switchDomain": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Simulates switching the live domain to hookahplus.net."
  },
  "cmd.deployFlavorMixUI": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Deploys Flavor Mix History Tracker UI."
  },
  "cmd.capturePOSWaitlist": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Activates POS Plugin Waitlist capture form."
  },
  "cmd.fireSession": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Simulates full Hookah+ session with QR and pricing."
  },
  "cmd.openWhisperMemory": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Opens the Whisper Log Memory view."
  },
  "cmd.lockTrustDeploy": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Locks the deployment pipeline for a given phase."
  },
  "cmd.alignMainPortalUI": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Synchronizes the main portal landing screen."
  },
  "cmd.registerLoungeConfig": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Registers YAML configuration for lounge pricing and flavor logic."
  },
  "cmd.pushPressKit": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Simulates pushing the latest press kit assets."
  },
  "cmd.releaseTeaserVideo": {
    "path": "cmd/modules/cmd_dispatcher.py",
    "description": "Publishes the Hookah+ teaser video to public channels."
  },
  "cmd.deployReflexUI": {
    "path": "cmd/modules/reflex_ui.py",
    "description": "Deploys Reflexive UI via Netlify."
  },
  "cmd.renderReflexLoyalty": {
    "path": "cmd/modules/reflex_ui.py",
    "description": "Renders loyalty heatmap for a given user."
  },
  "cmd.injectReflexHeatmap": {
    "path": "cmd/modules/reflex_ui.py",
    "description": "Injects Reflex Heatmap into dashboard."
  },
 codex/activate-hookah+-loyalty-yield-engine
  "cmd.deployLoyaltyBalanceUI": {
    "path": "cmd/modules/reflex_ui.py",
    "description": "Deploys the Loyalty Wallet user interface."
  },
  "cmd.generateAtlantaRevenueForecast": {
    "path": "cmd/modules/reflex_ui.py",
    "description": "Outputs the 7-day revenue forecast for Atlanta."

  "cmd.deployTrustHeatmap": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Renders lounge trust event heatmaps."
  },
  "cmd.syncFlavorUsageToPricing": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Syncs high-use flavors to pricing nudges."
  },
  "cmd.enableSessionReplayConsent": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Enables session replay consent opt-in."
  },
  "cmd.generateLoyaltyCoachHints": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Produces AI loyalty coaching tips."
  },
  "cmd.autoOptimizeFlavorMixes": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Suggests optimized flavor blend swaps."
  },
  "cmd.exportOwnerTrustDigest": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Exports owner trust digest reports."
  },
  "cmd.simulateFlavorBloom": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Simulates regional flavor demand blooms."
  },
  "cmd.unlockPremiumReflexTools": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Unlocks premium Reflex tools for high trust."
  },
  "cmd.nudgePartnerInvites": {
    "path": "cmd/modules/reflex_loop.py",
    "description": "Sends partner invite nudges."
 main
  },
  "cmd.deployToNetlify": {
    "path": "cmd/modules/reflex_ui.py",
    "description": "Triggers a Netlify deploy for a given branch."
  },
  "codex.chronosKairos": {
    "path": "codex/Modules/2025-08-02_chronos_kairos.ts",
    "description": "Agent Chronos_Î”Kairos for session timing and reflex decay tracking."
  },
  "codex.decaySensor": {
    "path": "codex/Modules/2025-08-02_decay_sensor.ts",
    "description": "Utility for computing reflex decay over time."
  },
  "agent.pricerHermes": {
    "path": "codex/Modules/pricer_hermes.ts",
    "description": "Dynamic pricing logic with premium detection and margin sync."
  }
}
